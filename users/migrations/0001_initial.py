# Generated by Django 5.1.4 on 2025-04-28 04:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cow_and_bull', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('about', models.TextField()),
                ('is_open', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MyStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('my_name', models.CharField(max_length=100)),
                ('birth_day', models.DateField(blank=True, null=True)),
                ('avatar_pic', models.ImageField(default='static/img/avatar/none.bmp', upload_to='media/img/avatar')),
                ('little_about', models.TextField(max_length=500)),
                ('status', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AvoidanceList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('visible_for_family', models.BooleanField(default=False)),
                ('why', models.TextField(default='')),
                ('comments', models.TextField(default='')),
                ('date_create', models.DateField(auto_now_add=True)),
                ('how_long', models.PositiveSmallIntegerField(default=0)),
                ('when', models.DateField(blank=True, default=None, null=True)),
                ('still', models.BooleanField(default=True)),
                ('its_a_thing', models.BooleanField(default=True)),
                ('only_me', models.BooleanField(default=True)),
                ('it_came_true', models.DateField(blank=True, default=None, null=True)),
                ('i_changed_my_mind', models.BooleanField(default=False)),
                ('what_to_do', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InGameRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_spent', models.PositiveIntegerField(default=0)),
                ('played_games', models.PositiveIntegerField(default=0)),
                ('min_time', models.PositiveIntegerField(default=0)),
                ('max_time', models.PositiveIntegerField(default=0)),
                ('number_of_points', models.PositiveIntegerField(default=0)),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='media/img/gamescreens')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cow_and_bull.game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='media/img/message')),
                ('time_send', models.DateTimeField(auto_now_add=True)),
                ('is_anonim', models.BooleanField(default=False)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_user', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.mygroup')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.mystatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_likes', models.PositiveIntegerField(default=0)),
                ('number_of_dislikes', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('visible_for_family', models.BooleanField(default=False)),
                ('why', models.TextField(default='')),
                ('comments', models.TextField(default='')),
                ('date_create', models.DateField(auto_now_add=True)),
                ('how_long', models.PositiveSmallIntegerField(default=0)),
                ('when', models.DateField(blank=True, default=None, null=True)),
                ('still', models.BooleanField(default=True)),
                ('its_a_thing', models.BooleanField(default=True)),
                ('only_me', models.BooleanField(default=True)),
                ('it_came_true', models.DateField(blank=True, default=None, null=True)),
                ('i_changed_my_mind', models.BooleanField(default=False)),
                ('picture', models.ImageField(blank=True, default='', null=True, upload_to='media/img/wishes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
